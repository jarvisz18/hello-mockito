package com.ixan.search.mockito;
/**
 * 什么是DDD?
 * 领域驱动设计，一种思潮，一种架构思想
 * <p>
 * 代码中的坏味道
 * 可维护性、可扩展性、可测试性
 * <p>
 * 事务脚本(三层架构)
 * 四层架构:用户接口层、应用层、领域层、基础设施层
 * <p>
 * 单一职责、开放封闭、依赖反转
 * <p>
 * DDD改造:
 * 充血模型: 将实体与引起实体变化
 * 贫血模型: POJO
 * 1. 使用充血模型的实体对象、描述核心业务能力
 * 2. 使用仓库与工厂、封装实体持久化操作
 * 3. 构建防腐层、隔离外部服务、第三方组件
 * 4. 实现领域服务(封装跨实体业务)
 * <p>
 * 实体:  代表具有唯一ID的领域对象
 * 值对象: 代表一成不变的、本质性的事务
 * 聚合根: 每个聚合内部有一个外部访问聚合的唯一入口
 * 限界上下文
 */